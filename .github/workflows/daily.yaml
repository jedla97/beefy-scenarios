name: "Daily Build"
on:
  workflow_dispatch:
  schedule:
    - cron: '0 20 * * *'
jobs:
  quarkus-main-build:
    name: Quarkus Main build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11 ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install required tools
        run: sudo apt update && sudo apt install pigz
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: Build Quarkus main
        run: |
          git clone https://github.com/quarkusio/quarkus.git && cd quarkus && ./mvnw -B -s .github/mvn-settings.xml clean install -Dquickly -Prelocations -Dno-test-modules
      - name: Tar Maven Repo
        shell: bash
        run: tar -I 'pigz -9' -cf maven-repo.tgz -C ~ .m2/repository
      - name: Persist Maven Repo
        uses: actions/upload-artifact@v3
        with:
          name: maven-repo
          path: maven-repo.tgz
          retention-days: 1
  linux-build-jvm:
    name: Daily - Linux - JVM build
    runs-on: ubuntu-latest
    needs: quarkus-main-build
    strategy:
      matrix:
        java: [ 11 ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK {{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: Download Maven Repo
        uses: actions/download-artifact@v3
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Test in JVM mode
        run: |
          mvn -fae -V -B -s .github/mvn-settings.xml -fae clean verify
      - name: Zip Artifacts
        if: failure()
        run: |
          zip -R artifacts-linux-jvm${{ matrix.java }}.zip '*-reports/*'
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: ci-artifacts
          path: artifacts-linux-jvm${{ matrix.java }}.zip
  
